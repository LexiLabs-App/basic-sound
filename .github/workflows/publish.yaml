name: Publish

on:
  push:
    branches: [publishing]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  check:
    runs-on: macos-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Check API
        run: ./gradlew apiCheck

      - name: Generate kover coverage report
        run: ./gradlew koverXmlReport

      - name: Add coverage report to PR
        if: ${{ github.event_name == 'pull_request' }}
        id: kover
        uses: mi-kas/kover-report@v1
        with:
          path: ${{ github.workspace }}/basic-sound/build/reports/kover/report.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Code Coverage
          update-comment: true
          min-coverage-overall: 00
          min-coverage-changed-files: 00

  release:
    name: Release to Sonatype
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: macos-latest
    needs:
      - check

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Write secrets to local.properties
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo sonatypeUsername="${SONATYPE_USERNAME}" >> "local.properties"
          echo sonatypePassword="${SONATYPE_PASSWORD}" >> "local.properties"
          echo gpgKeyId="${GPG_KEY_ID}" >> "local.properties"
          echo gpgKeySecret="${GPG_KEY_SECRET}" >> "local.properties"
          echo gpgKeyPassword="${GPG_KEY_PASSWORD}" >> "local.properties"
          echo test="${TEST}" >> local.properties
        env:
          TEST: ${{ vars.TEST }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_KEY_SECRET: ${{ secrets.GPG_KEY_SECRET }}
          GPG_KEY_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}

      - name: Release to sonatype
        run: ./gradlew publish

  documentation:
    name: Publish documentation
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: macos-latest
    needs:
      - check
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Generate api docs with dokka
        run: ./gradlew dokkaHtmlMultiModule

      - name: Move dokka api-doc to docs
        run: |
          sudo mkdir -p build/docs
          sudo mv build/dokka/htmlMultiModule/* build/docs

      - name: Upload pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/docs

      - name: Release to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
